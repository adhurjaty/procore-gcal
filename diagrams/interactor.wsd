@startuml
title Interactor

class Entities {
    AccountManager[] Users
    AppSettings settings
}

interface DataInteractor {
    User CreateUser(User user)
    void UpdateUser(User user)
    void DeleteUser(User user)
    User GetUser(Uuid id)
}

class UserUseCase {
    UserRequest userRequest
    DataInteractor db
    User Get()
    void Signup()
    void Update()
    void Delete()
}

class EventUseCase {
    ProcoreEvent event
    GCalEvent Get()
    void Create()
    void Update()
    void Remove()
}

class CollaboratorUseCase {
    UserRequest userRequest
    DataInteractor db
    void Add(CollaboratorRequest collab)
    void Update(CollaboratorRequest collab)
    void Remove(uuid id)
}

interface UseCaseInput {
    void Signup(UserRequest user)
    void Subscribe(UserRequest user)
    void ModifyUser(UserRequest user)
    void AddCollaborator(CollaboratorRequest collab)
    void AddEvent(ProcoreEvent event)
    void ModifyEvent(ProcoreEvent event)
    void DeleteEvent(ProcoreEvent event)
}

interface UseCaseOutput {
    void SetUser(User user)
    void SendEmail(EmailResponse emailResponse)
    void AddEvent(GCalEvent event)
    void ModifyEvent(GCalEvent event)
    void DeleteEvent(GCalEvent event)
}

class CalendarRequest {
    string token
    string refresh_token
}

class CreditCardInfo {
    string firstName
    string lastName
    string address
    string number
    int cvc
}

class UserRequest {
    string email
    uuid procore_token
    uuid procore_refresh_token
    bool is_trial
    CreditCardInfo cc_info
    CalendarRequest[] calendars
}

class CollaboratorRequest {
    string email
    string displayName
    CalendarRequest creds
}

class ProcoreEvent {
    uuid user_id
    string title
    string description
    datetime start_time
    datetime end_time
}

class GCalEvent {
    string id
    string title
    string description
    datetime start_time
    datetime send_time
    Location location
    timespan recurrence
}

class EmailResponse {
    User user
    User[] cc_users
    
}

class UseCases {
    UserCasesOutput output
    UserUseCase userCase
    EventUseCase eventCase
    CollaboratorUseCase collabCase
}

UseCases --|> UseCaseInput
UseCases --> UseCaseOutput
EventUseCase --> ProcoreEvent
EventUseCase --> GCalEvent
UserRequest --> CreditCardInfo
UseCases --> EventUseCase
UseCases --> UserUseCase
UserRequest --> CalendarRequest
UserUseCase --> DataInteractor
UserUseCase --> Entities
EventUseCase --> Entities
CollaboratorRequest --> CalendarRequest
UserUseCase --> UserRequest
CollaboratorUseCase --> UserRequest
UseCases --> CollaboratorUseCase

@enduml