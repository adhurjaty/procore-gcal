@startuml
title Controller

class PushViewModel {
    void Send()
}

class EmailViewModel {
    string fromAddress
    string[] toAddresses
    string[] ccAddresses
    string subject
    string body
}

class CalendarSetting {
    string email
}

class WebViewModel {
    string email
    datetime trial_start
    CalendarSetting[] calendars
}

class GCalViewModel {
    datetime start_time
    datetime end_time
    string name
    string description
}

class RequestHandler {
    json get_user(string id)
    json create_user(json user)
    json update_user(json user)
    json delete_user(json user)
    void webhooks_handler(WebhooksEvent event)
    void add_collaborator(json collaborator)
}

class Presenter {
    ResponseModel model
    void set_user()
    void update_calendar()
    void send_email()
}

class Controller {
    UseCaseInput interactor
}

interface UseCaseInput {
    void Signup(UserRequest user)
    void Subscribe(UserRequest user)
    void ModifyUser(UserRequest user)
    void AddEvent(ProcoreEvent event)
    void ModifyEvent(ProcoreEvent event)
    void DeleteEvent(ProcoreEvent event)
}

interface UseCaseOutput {
    void SetUser(User user)
    void EmailUser(User user)
    void AddEvent(GCalEvent event)
    void ModifyEvent(GCalEvent event)
    void DeleteEvent(GCalEvent event)
}

WebViewModel --> CalendarSetting
GCalViewModel --|> PushViewModel
EmailViewModel --|> PushViewModel
Presenter --> EmailViewModel
Presenter --> GCalViewModel
Presenter --> WebViewModel
RequestHandler --> Controller
Controller --|> UseCaseInput
Presenter --|> UseCaseOutput

@enduml